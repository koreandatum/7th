doctype html
html
    head
        title #{profile.usert}의 프로필
        link(rel='stylesheet', href='/public/styles/style.css')
        style.
            .profile-container {
                border: 1px solid #ced4da; /* 흰색 테두리 */
                border-radius: 5px; /* 둥근 경계선 */
                padding: 20px; /* 내부 여백 */
                max-width: 400px; /* 최대 너비 */
                margin: 20px auto; /* 가운데 정렬 */
                text-align: center; /* 텍스트 가운데 정렬 */
                background-color: #fff; /* 배경색 */
            }
            .profile-button {
                display: inline-block; /* 블록 요소로 변경 */
                background-color: #007bff; /* 버튼 색상 */
                color: white; /* 글자 색상 */
                border: none; /* 테두리 제거 */
                padding: 10px 15px; /* 패딩 */
                border-radius: 5px; /* 둥글게 */
                cursor: pointer; /* 포인터 커서 */
                text-decoration: none; /* 링크 스타일 제거 */
                margin-top: 10px; /* 상단 여백 */
            }
            .profile-input {
                width: calc(100% - 20px); /* 입력창 너비 조정 (여백 포함) */
                padding: 10px; /* 내부 여백 */
                border: 1px solid #ced4da; /* 테두리 색상 */
                border-radius: 5px; /* 둥글게 */
                box-sizing: border-box; /* 패딩 포함 전체 너비 계산 */
                margin-top: 10px; /* 상단 여백 */
                margin-bottom: 10px; /* 하단 여백 */
            }
    body
        h1 #{profile.usert}의 프로필
        .profile-container
            // 프로필 사진 표시
            if profile.profile_picture
                img(src=`/uploads/${profile.profile_picture.split('/').pop()}`, alt='프로필 사진', width='150') 
            else
                p 프로필 사진이 없습니다.
            
            br
            // 사용자 이름 출력
            h2 #{profile.usert}
            span @#{profile.username}
            br 
            br
            
            // 자기소개 출력
            if profile.bio
                if profile.bio.includes('http')
                    a(href=profile.bio, target='_blank') #{profile.bio}
                else
                    span #{profile.bio}
            else
                p 자기소개가 없습니다.
            
            br
            // 프로필 수정 버튼
            if user.username === profile.username
                a(href='/edit', class='profile-button') 프로필 수정

            // 서로이웃 기능 버튼 추가
            // 서로이웃 기능 버튼 추가
            // 서로이웃 기능 버튼 추가
            if user && user.username !== profile.username
                if friendshipStatus === 'pending'
                    button(type='button', class='profile-button', onclick=`addFriendship('${profile.username}')`) 서로이웃 추가
                else if friendshipStatus === 'accepted'
                    button(type='button', class='profile-button', onclick=`removeFriendship('${profile.username}')`) 서로이웃 해제
                else if friendshipStatus === 'received'
                    button(type='button', class='profile-button', onclick=`approveFriendship('${profile.username}')`) 서로이웃 승인
                else
                    // friendshipStatus가 null인 경우
                    button(type='button', class='profile-button', onclick=`addFriendship('${profile.username}')`) 서로이웃 추가






        // 로그아웃 버튼
        form(action='/logout', method='post')
            button(type='submit', class='profile-button') 로그아웃

        // 사용자 ID 입력창 및 프로필 이동 버튼 추가
        form(action='/profile/move', method='get', id='profile-move-form', onsubmit='return moveToProfile(event);')
            input(type='text', name='userid', class='profile-input', placeholder='ID를 입력하면 프로필로 이동합니다', required=false)
            button(type='submit', class='profile-button') 프로필 이동

        // 게시글 버튼 추가
        form(action=`/profile/${profile.username}/article`, method='get')
            button(type='submit', class='profile-button') 게시글

        // 알림 버튼 추가
        if user && user.username === profile.username
            form(action=`/profile/${profile.username}/notice`, method='get')
                button(type='submit', class='profile-button') 알림
            form(action=`/profile/${profile.username}/saved`, method='get')
                button(type='submit', class='profile-button') 저장됨

        // 스크립트: 입력창에 포커스 시 placeholder 색상 변경 및 프로필 이동 처리
        script.
            document.querySelector('.profile-input').addEventListener('focus', function() {
                this.placeholder = '';
            });
            document.querySelector('.profile-input').addEventListener('blur', function() {
                if (this.value === '') {
                    this.placeholder = 'ID를 입력하면 프로필로 이동합니다';
                }
            });

            // 프로필 이동 함수
            function moveToProfile(event) {
                event.preventDefault(); // 기본 폼 제출 방지
                const form = document.getElementById('profile-move-form');
                const formData = new FormData(form);
                const userid = formData.get('userid');

                if (userid.trim() === '') {
                    // 입력란이 공백인 경우 자신의 프로필로 리다이렉트
                    window.location.href = `/profile/`; // 자신의 프로필 페이지로 리다이렉트
                } else {
                    // ID가 입력된 경우 해당 프로필 페이지로 리다이렉트
                    window.location.href = `/profile/${userid}`; // 입력된 ID로 리다이렉트
                }
            }

            // 서로이웃 추가 함수
            function addFriendship(username) {
                fetch('/profile/' + username + '/friendship/add', {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                    },
                })
                .then(response => response.json())
                .then(data => {
                    if (data.success) {
                        alert('서로이웃 요청이 전송되었습니다.');
                        location.reload(); // 페이지 새로 고침
                    }
                })
                .catch(error => console.error('Error:', error));
            }

            // 서로이웃 승인 함수
            function approveFriendship(username) {
                fetch('/profile/' + username + '/friendship/approve', {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                    },
                })
                .then(response => response.json())
                .then(data => {
                    if (data.success) {
                        alert('서로이웃 요청이 승인되었습니다.');
                        location.reload(); // 페이지 새로 고침
                    }
                })
                .catch(error => console.error('Error:', error));
            }

            // 서로이웃 해제 함수
            function removeFriendship(username) {
                fetch('/profile/' + username + '/friendship/remove', {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                    },
                })
                .then(response => response.json())
                .then(data => {
                    if (data.success) {
                        alert('서로이웃 관계가 해제되었습니다.');
                        location.reload(); // 페이지 새로 고침
                    }
                })
                .catch(error => console.error('Error:', error));
            }
